{
  "info": {
    "_postman_id": "sports-stats-api-collection",
    "name": "Sports Stats API",
    "description": "GraphQL API for managing sports statistics including teams, players, matches, and statistics",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Teams",
      "item": [
        {
          "name": "Get All Teams",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ teams { id name city foundedYear coachName homeStadium totalWins totalLosses winPercentage } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Retrieve all teams with their basic information and statistics"
          }
        },
        {
          "name": "Get Team by ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ team(id: 1) { id name city foundedYear coachName homeStadium totalWins totalLosses winPercentage players { firstName lastName jerseyNumber position } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get a specific team by ID with its players"
          }
        },
        {
          "name": "Get Team by Name",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ teamByName(name: \\\"Lakers\\\") { id name city foundedYear coachName homeStadium players { firstName lastName } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Find a team by its name"
          }
        },
        {
          "name": "Get Teams by City",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ teamsByCity(city: \\\"Los Angeles\\\") { id name city foundedYear coachName homeStadium } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all teams from a specific city"
          }
        }
      ],
      "description": "Team-related GraphQL queries"
    },
    {
      "name": "Players",
      "item": [
        {
          "name": "Get All Players",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ players { id firstName lastName fullName jerseyNumber position dateOfBirth height weight team { name } averagePoints averageAssists averageRebounds totalGamesPlayed } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all players with their statistics and team information"
          }
        },
        {
          "name": "Get Player by ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ player(id: 1) { id firstName lastName fullName jerseyNumber position dateOfBirth height weight age team { name city } averagePoints averageAssists averageRebounds totalGamesPlayed } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get a specific player by ID with detailed information"
          }
        },
        {
          "name": "Get Players by Team",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playersByTeam(teamId: 1) { id firstName lastName jerseyNumber position averagePoints averageAssists averageRebounds } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all players from a specific team"
          }
        },
        {
          "name": "Get Players by Position",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playersByPosition(position: POINT_GUARD) { id firstName lastName jerseyNumber team { name } averagePoints averageAssists } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all players playing a specific position (POINT_GUARD, SHOOTING_GUARD, SMALL_FORWARD, POWER_FORWARD, CENTER)"
          }
        }
      ],
      "description": "Player-related GraphQL queries"
    },
    {
      "name": "Matches",
      "item": [
        {
          "name": "Get All Matches",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matches { id matchDate venue status homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore winner { name } isTie totalPoints isFinished } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all matches with team and score information"
          }
        },
        {
          "name": "Get Match by ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ match(id: 1) { id matchDate venue status homeTeam { name city } awayTeam { name city } homeTeamScore awayTeamScore winner { name } isTie totalPoints isFinished } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get a specific match by ID"
          }
        },
        {
          "name": "Get Live Matches",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ liveMatches { id matchDate venue homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all currently live matches"
          }
        },
        {
          "name": "Get Matches by Team",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matchesByTeam(teamId: 1) { id matchDate venue status homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all matches for a specific team"
          }
        }
      ],
      "description": "Match-related GraphQL queries"
    },
    {
      "name": "Statistics",
      "item": [
        {
          "name": "Get Player Stats",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playerStats(playerId: 1) { id points assists rebounds steals blocks fieldGoalsMade fieldGoalsAttempted threePointersMade threePointersAttempted freeThrowsMade freeThrowsAttempted minutesPlayed fieldGoalPercentage threePointPercentage freeThrowPercentage match { matchDate venue homeTeam { name } awayTeam { name } } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all statistics for a specific player"
          }
        },
        {
          "name": "Get Match Stats",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matchStats(matchId: 1) { id points assists rebounds steals blocks fieldGoalPercentage threePointPercentage freeThrowPercentage player { firstName lastName team { name } } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all player statistics for a specific match"
          }
        }
      ],
      "description": "Statistics-related GraphQL queries"
    },
    {
      "name": "Leaderboards",
      "item": [
        {
          "name": "Points Leaderboard",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ pointsLeaderboard(limit: 10) { category entries { rank value player { firstName lastName team { name } } } lastUpdated } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get top 10 players by points scored"
          }
        },
        {
          "name": "Assists Leaderboard",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ assistsLeaderboard(limit: 10) { category entries { rank value player { firstName lastName team { name } } } lastUpdated } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get top 10 players by assists"
          }
        },
        {
          "name": "Rebounds Leaderboard",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ reboundsLeaderboard(limit: 10) { category entries { rank value player { firstName lastName team { name } } } lastUpdated } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get top 10 players by rebounds"
          }
        }
      ],
      "description": "Leaderboard-related GraphQL queries"
    },
    {
      "name": "Advanced Queries",
      "item": [
        {
          "name": "Search Players",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ searchPlayers(name: \\\"James\\\") { id firstName lastName fullName jerseyNumber position team { name } averagePoints } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Search for players by name"
          }
        },
        {
          "name": "Upcoming Matches",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ upcomingMatches { id matchDate venue status homeTeam { name } awayTeam { name } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get all upcoming matches"
          }
        },
        {
          "name": "Complex Team Query with Relations",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ teams { id name city foundedYear totalWins totalLosses winPercentage players { firstName lastName position averagePoints } matches { matchDate status homeTeamScore awayTeamScore } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get teams with all related players and matches"
          }
        }
      ],
      "description": "Advanced GraphQL queries with complex relationships"
    },
    {
      "name": "Pagination & Sorting",
      "item": [
        {
          "name": "Teams Paginated",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ teamsPaginated(pagination: { page: 0, size: 5 }, sort: { field: \\\"name\\\", direction: ASC }) { content { id name city foundedYear coachName totalWins totalLosses winPercentage } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get teams with pagination (page 0, size 5) sorted by name"
          }
        },
        {
          "name": "Players Paginated",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playersPaginated(pagination: { page: 0, size: 10 }, sort: { field: \\\"lastName\\\", direction: ASC }) { content { id firstName lastName fullName jerseyNumber position team { name } averagePoints averageAssists averageRebounds } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get players with pagination (page 0, size 10) sorted by last name"
          }
        },
        {
          "name": "Matches Paginated",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matchesPaginated(pagination: { page: 0, size: 8 }, sort: { field: \\\"matchDate\\\", direction: DESC }) { content { id matchDate venue status homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore winner { name } } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get matches with pagination (page 0, size 8) sorted by match date descending"
          }
        },
        {
          "name": "Stats Paginated",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ statsPaginated(pagination: { page: 0, size: 15 }, sort: { field: \\\"points\\\", direction: DESC }) { content { id points assists rebounds steals blocks fieldGoalPercentage threePointPercentage player { firstName lastName team { name } } match { matchDate venue } } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get stats with pagination (page 0, size 15) sorted by points descending"
          }
        }
      ],
      "description": "Pagination and sorting examples for all entities"
    },
    {
      "name": "Filtering",
      "item": [
        {
          "name": "Players Filtered - By Team",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playersFiltered(filter: { teamId: 1 }, pagination: { page: 0, size: 10 }, sort: { field: \\\"jerseyNumber\\\", direction: ASC }) { content { id firstName lastName jerseyNumber position team { name } averagePoints averageAssists averageRebounds } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter players by team ID with pagination and sorting by jersey number"
          }
        },
        {
          "name": "Players Filtered - By Position",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playersFiltered(filter: { position: POINT_GUARD }, pagination: { page: 0, size: 10 }, sort: { field: \\\"averagePoints\\\", direction: DESC }) { content { id firstName lastName jerseyNumber position team { name } averagePoints averageAssists averageRebounds } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter players by position (POINT_GUARD) sorted by average points"
          }
        },
        {
          "name": "Players Filtered - By Points Range",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playersFiltered(filter: { minPoints: 15, maxPoints: 25 }, pagination: { page: 0, size: 10 }, sort: { field: \\\"averagePoints\\\", direction: DESC }) { content { id firstName lastName jerseyNumber position team { name } averagePoints averageAssists averageRebounds } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter players by average points range (15-25) sorted by points descending"
          }
        },
        {
          "name": "Players Filtered - By Jersey Number",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playersFiltered(filter: { minJerseyNumber: 1, maxJerseyNumber: 10 }, pagination: { page: 0, size: 10 }, sort: { field: \\\"jerseyNumber\\\", direction: ASC }) { content { id firstName lastName jerseyNumber position team { name } averagePoints averageAssists averageRebounds } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter players by jersey number range (1-10) sorted by jersey number"
          }
        },
        {
          "name": "Matches Filtered - By Status",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matchesFiltered(filter: { status: COMPLETED }, pagination: { page: 0, size: 10 }, sort: { field: \\\"matchDate\\\", direction: DESC }) { content { id matchDate venue status homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore winner { name } } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter matches by status (COMPLETED) sorted by match date descending"
          }
        },
        {
          "name": "Matches Filtered - By Team",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matchesFiltered(filter: { teamId: 1 }, pagination: { page: 0, size: 10 }, sort: { field: \\\"matchDate\\\", direction: DESC }) { content { id matchDate venue status homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore winner { name } } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter matches by team ID with pagination and sorting"
          }
        },
        {
          "name": "Matches Filtered - By Date Range",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matchesFiltered(filter: { dateFrom: \\\"2024-01-01T00:00:00\\\", dateTo: \\\"2024-12-31T23:59:59\\\" }, pagination: { page: 0, size: 10 }, sort: { field: \\\"matchDate\\\", direction: DESC }) { content { id matchDate venue status homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore winner { name } } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter matches by date range (2024) sorted by match date descending"
          }
        },
        {
          "name": "Matches Filtered - By Venue",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matchesFiltered(filter: { venue: \\\"Staples Center\\\" }, pagination: { page: 0, size: 10 }, sort: { field: \\\"matchDate\\\", direction: DESC }) { content { id matchDate venue status homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore winner { name } } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter matches by venue with pagination and sorting"
          }
        },
        {
          "name": "Teams Filtered - By City",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ teamsFiltered(filter: { city: \\\"Los Angeles\\\" }, pagination: { page: 0, size: 10 }, sort: { field: \\\"name\\\", direction: ASC }) { content { id name city foundedYear coachName homeStadium totalWins totalLosses winPercentage } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter teams by city with pagination and sorting by name"
          }
        },
        {
          "name": "Teams Filtered - By Founded Year",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ teamsFiltered(filter: { minFoundedYear: 1940, maxFoundedYear: 1980 }, pagination: { page: 0, size: 10 }, sort: { field: \\\"foundedYear\\\", direction: ASC }) { content { id name city foundedYear coachName homeStadium totalWins totalLosses winPercentage } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter teams by founded year range (1940-1980) sorted by founded year"
          }
        },
        {
          "name": "Teams Filtered - By Name Contains",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ teamsFiltered(filter: { nameContains: \\\"Lakers\\\" }, pagination: { page: 0, size: 10 }, sort: { field: \\\"name\\\", direction: ASC }) { content { id name city foundedYear coachName homeStadium totalWins totalLosses winPercentage } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Filter teams by name containing 'Lakers' with pagination and sorting"
          }
        }
      ],
      "description": "Advanced filtering examples for all entities"
    },
    {
      "name": "Paginated Search",
      "item": [
        {
          "name": "Search Players Paginated",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ searchPlayersPaginated(name: \\\"James\\\", pagination: { page: 0, size: 10 }, sort: { field: \\\"lastName\\\", direction: ASC }) { content { id firstName lastName fullName jerseyNumber position team { name } averagePoints averageAssists averageRebounds } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Search for players with name containing 'James' using pagination and sorting"
          }
        },
        {
          "name": "Players By Team Paginated",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playersByTeamPaginated(teamId: 1, pagination: { page: 0, size: 15 }, sort: { field: \\\"jerseyNumber\\\", direction: ASC }) { content { id firstName lastName fullName jerseyNumber position team { name } averagePoints averageAssists averageRebounds } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get players by team ID with pagination and sorting by jersey number"
          }
        },
        {
          "name": "Matches By Team Paginated",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matchesByTeamPaginated(teamId: 1, pagination: { page: 0, size: 12 }, sort: { field: \\\"matchDate\\\", direction: DESC }) { content { id matchDate venue status homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore winner { name } } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get matches by team ID with pagination and sorting by match date descending"
          }
        }
      ],
      "description": "Paginated search and team-specific queries"
    },
    {
      "name": "Complex Combinations",
      "item": [
        {
          "name": "Players Filtered - Multiple Criteria",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ playersFiltered(filter: { teamId: 1, position: POINT_GUARD, minJerseyNumber: 1, maxJerseyNumber: 15 }, pagination: { page: 0, size: 10 }, sort: { field: \\\"averagePoints\\\", direction: DESC }) { content { id firstName lastName jerseyNumber position team { name } averagePoints averageAssists averageRebounds } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Complex filter: team 1, POINT_GUARD position, jersey 1-15, sorted by points"
          }
        },
        {
          "name": "Matches Filtered - Multiple Criteria",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ matchesFiltered(filter: { teamId: 1, status: COMPLETED, hasScore: true }, pagination: { page: 0, size: 10 }, sort: { field: \\\"matchDate\\\", direction: DESC }) { content { id matchDate venue status homeTeam { name } awayTeam { name } homeTeamScore awayTeamScore winner { name } } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Complex filter: team 1, completed matches with scores, sorted by date"
          }
        },
        {
          "name": "Teams Filtered - Multiple Criteria",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ teamsFiltered(filter: { city: \\\"Los Angeles\\\", minFoundedYear: 1940, maxFoundedYear: 1980 }, pagination: { page: 0, size: 10 }, sort: { field: \\\"winPercentage\\\", direction: DESC }) { content { id name city foundedYear coachName homeStadium totalWins totalLosses winPercentage } pageInfo { hasNextPage hasPreviousPage totalPages totalElements currentPage pageSize } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Complex filter: LA teams founded 1940-1980, sorted by win percentage"
          }
        }
      ],
      "description": "Complex filtering combinations with multiple criteria"
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "GraphQL Introspection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"{ __schema { types { name } } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": ["{{base_url}}"],
              "path": ["graphql"]
            },
            "description": "Get GraphQL schema information"
          }
        }
      ],
      "description": "Health check and schema introspection queries"
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8090",
      "type": "string"
    }
  ]
}
